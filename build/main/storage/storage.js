"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Storage = void 0;
const universal_cookie_1 = __importDefault(require("universal-cookie"));
const constants_1 = require("../constants");
const DEFAULT_COUNTRY = process.env.GXP_DEFAULT_COUNTRY;
const DEFAULT_BRAND = process.env.GXP_DEFAULT_BRAND;
const DEFAULT_LANGUAGE = process.env.GXP_DEFAULT_LANGUAGE;
const defaults = {
    [constants_1.STORAGE_KEYS.COUNTRY]: DEFAULT_COUNTRY,
    [constants_1.STORAGE_KEYS.BRAND]: DEFAULT_BRAND,
    [constants_1.STORAGE_KEYS.LANGUAGE]: DEFAULT_LANGUAGE,
};
const cookiesToKeep = [
    constants_1.STORAGE_KEYS.COUNTRY,
    constants_1.STORAGE_KEYS.BRAND,
    constants_1.STORAGE_KEYS.LANGUAGE,
];
// const cookies = new Cookies();
class Storage {
    static initialize(cookies = new universal_cookie_1.default()) {
        this.cookies = cookies;
    }
    static getData(key) {
        var _a;
        const value = this.cookies.get(key) || "";
        if (value === "" && defaults[key]) {
            return (_a = defaults[key]) !== null && _a !== void 0 ? _a : "";
        }
        return value;
    }
    static setData(key, value) {
        const jsonValue = typeof value === "string" ? value : JSON.stringify(value);
        this.cookies.set(key, jsonValue);
    }
    static removeData(key) {
        this.cookies.remove(key);
    }
    static removeAll() {
        Object.keys(this.cookies.getAll()).forEach((key) => {
            if (!cookiesToKeep.includes(key)) {
                this.removeData(key);
            }
        });
    }
    static addListener(callback) {
        this.cookies.addChangeListener(callback);
    }
}
exports.Storage = Storage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdG9yYWdlL3N0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0VBQWlFO0FBRWpFLDRDQUE0QztBQUU1QyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDO0FBQ3hELE1BQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUM7QUFDcEQsTUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0FBRTFELE1BQU0sUUFBUSxHQUFHO0lBQ2YsQ0FBQyx3QkFBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGVBQWU7SUFDdkMsQ0FBQyx3QkFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFLGFBQWE7SUFDbkMsQ0FBQyx3QkFBWSxDQUFDLFFBQVEsQ0FBQyxFQUFFLGdCQUFnQjtDQUMxQyxDQUFDO0FBRUYsTUFBTSxhQUFhLEdBQUc7SUFDcEIsd0JBQVksQ0FBQyxPQUFPO0lBQ3BCLHdCQUFZLENBQUMsS0FBSztJQUNsQix3QkFBWSxDQUFDLFFBQVE7Q0FDdEIsQ0FBQztBQUVGLGlDQUFpQztBQUNqQyxNQUFhLE9BQU87SUFHWCxNQUFNLENBQUMsVUFBVSxDQUFDLFVBQW1CLElBQUksMEJBQU8sRUFBRTtRQUN2RCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFXOztRQUMvQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDMUMsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNqQyxPQUFPLE1BQUEsUUFBUSxDQUFDLEdBQUcsQ0FBQyxtQ0FBSSxFQUFFLENBQUM7U0FDNUI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQVcsRUFBRSxLQUFjO1FBQy9DLE1BQU0sU0FBUyxHQUFHLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVFLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFXO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFTSxNQUFNLENBQUMsU0FBUztRQUNyQixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNqRCxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUN0QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBOEI7UUFDdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMzQyxDQUFDO0NBQ0Y7QUFuQ0QsMEJBbUNDIn0=